name: Idol Video Gallery Generator

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow moviepy imageio imageio-ffmpeg

      - name: Generate idol_video_links.txt
        shell: bash
        run: |
          python <<'PYCODE'
          import os
          from pathlib import Path
          from moviepy.editor import VideoFileClip
          from PIL import Image

          base_url = "https://github.com/beltedblinds/idols-video-01/raw/refs/heads/main/"
          output_file = "idol_video_links.txt"

          def extract_first_frame(video_path, thumb_path):
              try:
                  clip = VideoFileClip(str(video_path))
                  frame = clip.get_frame(0)
                  img = Image.fromarray(frame)
                  img.save(thumb_path)
                  clip.close()
                  print(f"✅ Created thumbnail for {video_path}")
              except Exception as e:
                  print(f"⚠️ Error creating thumbnail for {video_path}: {e}")

          lines = []
          for root, _, files in os.walk("."):
              for file in files:
                  if file.lower().endswith(".mp4"):
                      full_path = Path(root) / file
                      relative_path = full_path.relative_to(".")
                      idol_name = relative_path.parts[0]  # Folder name = Idol Name

                      thumb_path = full_path.with_suffix(".jpg")
                      extract_first_frame(full_path, thumb_path)

                      video_url = base_url + str(relative_path).replace(" ", "%20")
                      thumb_url = base_url + str(thumb_path).replace(" ", "%20")

                      lines.append(f"{idol_name},{video_url},{thumb_url},Video")

          lines.sort()
          with open(output_file, "w", encoding="utf-8") as f:
              f.write("\n".join(lines))

          print(f"\n✅ Generated {len(lines)} entries in {output_file}")
          PYCODE

      - name: Commit and push results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add idol_video_links.txt *.jpg || true
          git commit -m "Auto-generate idol_video_links.txt and thumbnails" || echo "No changes to commit"
          git push
